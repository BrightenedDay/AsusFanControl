<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hQDrD4oA5w6PAOMNlADeDJoa2Qug1dMKpv/MCazixQiyu70HuNu0Br/arAXFu6QFyuKbBND/kwPU1YwD
        2BqEA9wAfALgAHUC4wBuAuYAZwHoAGEB6wBbAe0AVQHvAFAB8ABLAfEA+RJ0APgSeAD2EXwA9BCAAPEP
        hADvDokA6w2OAOgMkwDjC5gA3wudANoKo07UCaj5zQiu/8YHtIe+B7oItgbAGq0FxhqkBMwImwTRh5MD
        1v+KA9r5ggLeTnoC4gBzAuUAawLoAGQB6gBdAewAVwHuAFEB8ABLAfIARgHzAEIB9AD4D30A9g+BAPUO
        hQDyDYkA7w2NAOwMkgDpC5cA5QqcAOAKoQDbCaYA1QiriM8Isf/IB7b1wAa8RbgGwQCvBccApQTNAJwE
        0gCTA9dFigPc9YEC4P95AuOIcQLmAGkB6QBiAewAWgHuAFQB8ABNAfIARwHzAEIB9AA9AfYAOQD3APcM
        hgD1DIkA8wyNAPALkQDtC5YA6gqaAOYJnwDhCaQA3AipANcHrgfRB7O1yga4/8IGvtu6BcMcsQXIAKgE
        zgCeA9MAlAPYAIsD3RyBAuHbeQLk/3AC57VoAeoGYAHtAFgB7wBRAfEASwHzAEQB9AA/AfYAOQH3ADUA
        +AAwAPkA9gqOAPQKkgDyCpUA7wmZAOsJngDnCKIA4winAN4HrADZB7AA0wa1FMwGutHFBb//vQXEvbQE
        yQmrBM4AoQPUAJcD2QCMAt0AgwLhCXkC5b1wAuj/ZwHr0V8B7hNXAfAAUAHyAEkB9ABCAfUAPAH3ADYA
        +AAxAPkALQD5ACkA+gD0CZYA8wmZAPAInQDtCKEA6QelAOUHqgDgB64A2wazANUGuADOBbwdxwXB3sAE
        xv+3BMuqrgTPA6QD1ACaA9kAjwLeAIUC4gB7AuYDcQHpq2gB7P9fAe/eVwHxHE8B8wBIAfUAQQH2ADoB
        9wA0APgALwD5ACoA+gAmAPsAIgD7APMHnQDxB6EA7gelAOsHqQDnBq0A4gaxAN0FtQDXBboA0QW+AMoE
        wxPDBMfQugTM/7ID0NGoA9UjngPZAJMC3gCIAuIAfgLmAHMB6SNqAe3RYAHv/1gB8c9PAfMTRwH1AEAB
        9wA5APgAMwD5AC0A+gAoAPsAJAD7ACAA/AAcAPwA8gakAPAGqADsBqwA6AavAOQFswDfBbgA2gW8ANQE
        wADNBMUAxgTJAb4DzZC1A9H/rAPW/qIC2syYAt5/jQLiX4EC5l92Aep/bAHtzGIB8P5ZAfL/UAH0j0gB
        9gFAAfcAOQD4ADIA+gAsAPoAJwD7ACIA/AAeAPwAGgD9ABcA/QDxBasA7gWvAOoFsgDmBbYA4gS6ANwE
        vgDWBMIA0APGAMkDygDBA84AuQPSJLAC1samAtr/nALe/5EC4v+GAeb/ewHp/3AB7f9lAfD/WwHy/1IB
        9MdJAfYkQQH4ADoA+QAzAPoALAD7ACYA/AAhAPwAHQD9ABkA/QAVAP0AEwD+AO8EsQDsBLUA6AS4AOQE
        vADfBMAA2QPEANMDyADMA8sAxQPPAL0C0wC0AtcAqwLbJKEC3pWWAuLejAHl9oAB6f10Aez9aQHv918B
        8t9VAfSVTAH2JUMA+AA7APkANAD6AC0A+wAnAPwAIQD8ABwA/QAYAP0AFAD+ABEA/gAPAP4A7gO3AOsD
        ugDmA74A4gPBANwDxQDWA8kA0ALNAMkC0ADBAtQAuQLYALAC2wCmAt8AnAHiBJEB5SCGAelDegHsVm4B
        71djAfJDWQH0IE8B9gRGAPgAPQD5ADUA+gAuAPsAKAD8ACIA/QAcAP0AGAD9ABQA/gARAP4ADgD+AAwA
        /gDsArwA6QPAAOQDwwDfAsYA2gLKANQCzQDNAtEAxQLVAL0C2AC1AdsArAHfAKIB4gCXAeUAjAHoAIEB
        6wB1Ae4AaQHxAF4B9ABTAfYASQD4AEAA+QA4APoAMAD7ACkA/AAjAP0AHQD9ABgA/gAUAP4AEQD+AA4A
        /gALAP4ACQD/AOsCwQDnAsQA4wLHAN0CygDYAs4A0QLRAMoB1QDCAdgAugHbALEB3wCoAeIAnQHlAJMB
        6ACHAesAfAHtAHAB8ABkAfMAWQH1AE4A9wBFAPkAPAD6ADMA+wAsAPwAJQD9AB8A/QAZAP4AFQD+ABEA
        /gAOAP4ACwD/AAkA/wAHAP8A///////////8P/w/8A/wD+AH4A/gA8AHwAGAA8GAAYOD4AfBg/APwYPg
        B8GB4AeBwAAAA8ABgAPgA8AH+APAH/+AAf//4Af//+AH///AA///wAP//8PD//+Dwf//g8H//4PB//+D
        wf//gAH//8AD///gB///8A////////////8=
</value>
  </data>
</root>